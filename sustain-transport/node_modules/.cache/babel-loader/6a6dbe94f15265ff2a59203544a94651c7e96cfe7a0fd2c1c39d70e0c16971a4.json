{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\JavaTpoint\\\\JTp\\\\stt\\\\sutain_transport_6\\\\sustain-transport\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { loginValidationSchema } from \"./Validation\";\nimport { useAuth } from \"../AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, googleProvider, githubProvider } from \"../firebase\";\nimport { signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport { Box, Divider, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setIsLoggedIn\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: loginValidationSchema,\n    validateOnChange: true,\n    onSubmit: async values => {\n      try {\n        await signInWithEmailAndPassword(auth, values.email, values.password);\n        setIsLoggedIn(true);\n        navigate(\"/\");\n      } catch (error) {\n        console.error(\"Login Error:\", error);\n        setError(error.message);\n      }\n    }\n  });\n  const handleGoogleSignIn = async () => {\n    try {\n      await signInWithPopup(auth, googleProvider);\n      setIsLoggedIn(true);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Google Sign-in Error:\", error);\n      setError(error.message);\n    }\n  };\n  const handleGithubSignIn = async () => {\n    try {\n      const result = await signInWithPopup(auth, githubProvider);\n      setIsLoggedIn(true);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Github Sign-in Error:\", error);\n      if (error.code === 'auth/account-exists-with-different-credential') {\n        // Get existing providers for this email\n        const email = error.customData.email;\n        const providers = await fetchSignInMethodsForEmail(auth, email);\n        setError(`An account already exists with this email. Please sign in with ${providers[0]}. ` + `Available sign-in methods: ${providers.join(', ')}`);\n\n        // If the user has a Google account, prompt them to sign in with Google\n        if (providers.includes('google.com')) {\n          try {\n            // Sign in with Google\n            const googleResult = await signInWithPopup(auth, googleProvider);\n\n            // Get the GitHub credential\n            const githubCredential = GithubAuthProvider.credentialFromError(error);\n\n            // Link the GitHub credential to the Google account\n            if (githubCredential) {\n              await linkWithCredential(googleResult.user, githubCredential);\n              setIsLoggedIn(true);\n              navigate(\"/\");\n            }\n          } catch (linkError) {\n            console.error(\"Error linking accounts:\", linkError);\n            setError(\"Error linking accounts. Please try again.\");\n          }\n        }\n      } else {\n        setError(error.message);\n      }\n    }\n  };\n  const placementStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"80vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: placementStyles,\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Email\",\n        type: \"email\",\n        ...formik.getFieldProps(\"email\"),\n        sx: {\n          minWidth: \"420px\"\n        },\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Password\",\n        type: \"password\",\n        ...formik.getFieldProps(\"password\"),\n        sx: {\n          minWidth: \"420px\",\n          margin: \"12px 0px\"\n        },\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          width: \"200px\",\n          margin: \"10px auto\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          width: \"100%\",\n          my: 2\n        },\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGoogleSignIn,\n        variant: \"outlined\",\n        sx: {\n          width: \"200px\",\n          mb: 2\n        },\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGithubSignIn,\n        variant: \"outlined\",\n        sx: {\n          width: \"200px\",\n          mb: 2\n        },\n        children: \"Sign in with GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2\n        },\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"tNMFnEh4lCI6zIeQDO97WhRvnvo=\", false, function () {\n  return [useNavigate, useAuth, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useFormik","TextField","Button","loginValidationSchema","useAuth","useNavigate","auth","googleProvider","githubProvider","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","Box","Divider","Typography","jsxDEV","_jsxDEV","Login","_s","navigate","setIsLoggedIn","error","setError","formik","initialValues","email","password","validationSchema","validateOnChange","onSubmit","values","console","message","handleGoogleSignIn","handleGithubSignIn","result","code","customData","providers","fetchSignInMethodsForEmail","join","includes","googleResult","githubCredential","credentialFromError","linkWithCredential","user","linkError","placementStyles","display","flexDirection","justifyContent","alignItems","minHeight","sx","className","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","fullWidth","label","type","getFieldProps","minWidth","touched","Boolean","errors","helperText","margin","color","mb","width","my","onClick","mt","href","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/JavaTpoint/JTp/stt/sutain_transport_6/sustain-transport/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { loginValidationSchema } from \"./Validation\";\r\nimport { useAuth } from \"../AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, googleProvider, githubProvider } from \"../firebase\";\r\nimport {\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { Box, Divider, Typography } from \"@mui/material\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const { setIsLoggedIn } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: loginValidationSchema,\r\n    validateOnChange: true,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        await signInWithEmailAndPassword(auth, values.email, values.password);\r\n        setIsLoggedIn(true);\r\n        navigate(\"/\");\r\n      } catch (error) {\r\n        console.error(\"Login Error:\", error);\r\n        setError(error.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await signInWithPopup(auth, googleProvider);\r\n      setIsLoggedIn(true);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Google Sign-in Error:\", error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleGithubSignIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, githubProvider);\r\n      setIsLoggedIn(true);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Github Sign-in Error:\", error);\r\n      \r\n      if (error.code === 'auth/account-exists-with-different-credential') {\r\n        // Get existing providers for this email\r\n        const email = error.customData.email;\r\n        const providers = await fetchSignInMethodsForEmail(auth, email);\r\n        \r\n        setError(\r\n          `An account already exists with this email. Please sign in with ${providers[0]}. ` +\r\n          `Available sign-in methods: ${providers.join(', ')}`\r\n        );\r\n        \r\n        // If the user has a Google account, prompt them to sign in with Google\r\n        if (providers.includes('google.com')) {\r\n          try {\r\n            // Sign in with Google\r\n            const googleResult = await signInWithPopup(auth, googleProvider);\r\n            \r\n            // Get the GitHub credential\r\n            const githubCredential = GithubAuthProvider.credentialFromError(error);\r\n            \r\n            // Link the GitHub credential to the Google account\r\n            if (githubCredential) {\r\n              await linkWithCredential(googleResult.user, githubCredential);\r\n              setIsLoggedIn(true);\r\n              navigate(\"/\");\r\n            }\r\n          } catch (linkError) {\r\n            console.error(\"Error linking accounts:\", linkError);\r\n            setError(\"Error linking accounts. Please try again.\");\r\n          }\r\n        }\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const placementStyles = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"80vh\",\r\n  };\r\n\r\n  return (\r\n    <Box sx={placementStyles} className=\"login\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Login\r\n      </Typography>\r\n      <form onSubmit={formik.handleSubmit} className=\"loginForm\">\r\n        <TextField\r\n          fullWidth\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          {...formik.getFieldProps(\"email\")}\r\n          sx={{ minWidth: \"420px\" }}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          {...formik.getFieldProps(\"password\")}\r\n          sx={{ minWidth: \"420px\", margin: \"12px 0px\" }}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        {error && (\r\n          <Typography color=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ width: \"200px\", margin: \"10px auto\" }}\r\n        >\r\n          Login\r\n        </Button>\r\n\r\n        <Divider sx={{ width: \"100%\", my: 2 }}>OR</Divider>\r\n\r\n        <Button\r\n          onClick={handleGoogleSignIn}\r\n          variant=\"outlined\"\r\n          sx={{ width: \"200px\", mb: 2 }}\r\n        >\r\n          Sign in with Google\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={handleGithubSignIn}\r\n          variant=\"outlined\"\r\n          sx={{ width: \"200px\", mb: 2 }}\r\n        >\r\n          Sign in with GitHub\r\n        </Button>\r\n\r\n        <Typography sx={{ mt: 2 }}>\r\n          Don't have an account? <a href=\"/register\">Register</a>\r\n        </Typography>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}